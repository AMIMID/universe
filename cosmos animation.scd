
(
s.options.numWireBufs = 1024*4;
s.options.numOutputBusChannels=4;
s.options.numInputBusChannels=0;
TempoClock.default.tempo_(1);
s.options.memSize = 8192*32*2;
s.options.blockSize = 64*4;
s.options.maxNodes = 1024 * 16;
s.options.sampleRate= 44100;
s.boot;
)


Buffer.freeAll




(
Buffer.freeAll;
~si=200;
//~controlBus_m = Bus.control(s, 1);
~controlBus_a = Bus.control(s, 1);
~controlBus_a1 = Bus.control(s, 1);
//~controlBus_spread = Bus.control(s, 1);


SynthDef.new(\player,{
	arg tempo;
	var env,size=~si;
	var sig1, sig2, sig3, sig4,control,sig;

	//sig=SinOsc.kr(0.01).range(1,4);

	//Out.kr(~controlBus_m.index, sig);
	//Out.kr(~controlBus_m.index, sig);â‰¥
	Out.kr(~controlBus_a.index, (LFSaw.kr((LFSaw.kr(0.01,0,0.1).abs),1,mul:1).range(0,(size*2.sqrt))).poll);
	//Out.kr(~controlBus_a1.index, SinOsc.kr(1,90.degrad,mul:1).range(10.neg,00));

//Out.ar(0,sig*1);
//Out.ar(1,sig*1);

}).add;
)


Server.freeAll


//////////////////////////////////////////////////////////////////////animation

(
var data;
var az=0,el=0;
var sph,pl=0,magg,r,run = true;
var ot=0.degrad,dota,pla=0;
var sph1,sph2,sph3,sph4,sph5,sph6,sph7,m_x=3,m_y=3,m_z=3,mq=2;
var az1=0,el1=0,az2=0,el2=0,az3=0,el3=0,mag,mag_x,mag_y,mag_z,qx,qy;
var az4=0,el4=0,az5=0,el5=0,az6=0,el6=0,az7=0,el7=0,pl1=0,pl2=0,pl3=0,pl4=0,pl5=0,pl6=0,pl7=0;
var angle=0,ang=0,mag_qx,mag_qy;
var azimuth,elevation,magnitudex,magnitudey,magnitudez,magnitudeqx,magnitudeqy;
var durx,dury,durz;
var sphx,sphy,sphz,azx,elx,azy,ely,azz,elz,plx=0,ply=0,plz=0;
var num=1.neg,amplitude,amplitude1,amplitude2,a,mod_angle,mod_angle1,mod_angle0;
var ellipsis=[1,1,1],spread=1,mk=100;
var mag1=1,mag2=1,mag3=1,mag4=1,mag5=1,mag6=1,mag7=1;
var size=~si,limdim=(2*(size*2.sqrt+1)), limd=(size*2.sqrt*2);
Synth.new(\player);
data = [];

w = Window.new("3D Scatterplot", Rect(40,40,limdim , limdim)).front;

~v = UserView.new(w,Rect(0,0,limdim,limdim)).background_(Color.black);
a = ScatterView3d(~v,Rect(0,0, limdim,limdim), data, [limd.neg, limd].asSpec,[limd.neg, limd].asSpec,[limd.neg, limd].asSpec);
a.drawMethod = \fillRect;
a.symbolSize = 1;
a.symbolColor = Color.white;
a.background = Color.black;

  r= Routine({loop{

	data=[];
	//m_x=~controlBus_mx.getSynchronous;
	//m_y=~controlBus_my.getSynchronous;
	//m_z=~controlBus_mz.getSynchronous;
		//m=~controlBus_m.getSynchronous;
	m_x=~controlBus_a .getSynchronous;
	m_y=~controlBus_a.getSynchronous;
	m_z=~controlBus_a.getSynchronous;

//spread = if(m_x < 1) { 1 / m_x } { m_x};
	spread=m_x.reciprocal;




	(
{
	~dur=[];~az=[];~el=[];~magx=[];~magy=[];~magz=[];~qx=[];~qy=[];


	(2.pow(7)).do{
azimuth=32.collect{

			az1 = (az1+(360-(360/1.6180339887499))).wrap(180.neg,180);  // Increment azimuth
				el1 = (el1+(180-(180/1.6180339887499))).wrap(90.neg,90);
			mag1=(mag1+(1-(1/1.6180339887499))).wrap(0,1);
sph1=(Spherical(mag1,(az1.degrad+angle.degrad).wrap(pi.neg,pi),(el1.degrad+angle.degrad).wrap((pi/2).neg,(pi/2)))).theta.round(0.00001);

	};

elevation=(32).collect{

				az2 = (az2+(360-(360/1.6180339887499))).wrap(180.neg,180);  // Increment azimuth
			el2 = (el2+(180-(180/1.6180339887499))).wrap(90.neg,90);

	mag2=(mag2+(1-(1/1.6180339887499))).wrap(0,1);
		sph2=(Spherical(mag2,(az2.degrad+angle.degrad).wrap(pi.neg,pi),(el2.degrad+angle.degrad).wrap((pi/2).neg,(pi/2)))).phi.round(0.00001);

	};

			magnitudex=	32.collect{
			az3 = (az3+(360-(360/1.6180339887499))).wrap(180.neg,180);
			el3 = (el3+ (180-(180/1.6180339887499))).wrap(90.neg,90);

				mag3=(mag3+(1-(1/1.6180339887499))).wrap(0,1);
	sph3=(Spherical(mag3,(az3.degrad+angle.degrad).wrap(pi.neg,pi),(el3.degrad+angle.degrad).wrap((pi/2).neg,(pi/2))));

	 mag_x=((Complex(cos((sph3.theta.round(0.00001)*m_x).wrap(pi.neg,pi)),cos((sph3.theta.round(0.00001)*m_x).wrap(pi.neg,pi))).rho/(2.sqrt)).pow(spread)*
			(Complex(cos((sph3.phi.round(0.00001)).wrap((pi/2).neg,(pi/2))),cos((sph3.phi.round(0.00001)).wrap((pi/2).neg,(pi/2)))).rho/(2.sqrt)).pow(spread));

				};


	magnitudey=	32.collect{		az4 = (az4+(360-(360/1.6180339887499))).wrap(180.neg,180);
				el4 = (el4+(180-(180/1.6180339887499))).wrap(90.neg,90);

				mag4=(mag4+(1-(1/1.6180339887499))).wrap(0,1);

	sph4=(Spherical(mag4,(az4.degrad+angle.degrad).wrap(pi.neg,pi),(el4.degrad+angle.degrad).wrap((pi/2).neg,(pi/2))));

		 mag_y=((Complex(sin((sph4.theta.round(0.00001)*m_y).wrap(pi.neg,pi)),sin((sph4.theta.round(0.00001)*m_y).wrap(pi.neg,pi))).rho/(2.sqrt)).pow(spread)*
		 (Complex(cos((sph4.phi.round(0.00001)).wrap((pi/2).neg,(pi/2))),cos((sph4.phi.round(0.00001)).wrap((pi/2).neg,(pi/2)))).rho/(2.sqrt)).pow(spread));
				};


	qx=	32.collect{		az5 = (az5+(360-(360/1.6180339887499))).wrap(180.neg,180);
			el5 = (el5+(180-(180/1.6180339887499))).wrap(90.neg,90);

				mag5=(mag5+(1-(1/1.6180339887499))).wrap(0,1);

	sph5=(Spherical(mag5,(az5.degrad+angle.degrad).wrap(pi.neg,pi),(el5.degrad+angle.degrad).wrap((pi/2).neg,(pi/2))));


mag_qx=((((Complex(cos(((sph5.theta.round(0.00001))*mq).wrap(pi.neg,pi)),
cos(((sph5.theta.round(0.00001))*mq).wrap(pi.neg,pi))))*
(Complex(sin((sph5.phi.round(0.00001)*(mq-1)).wrap((pi/2).neg,(pi/2))),
sin((sph5.phi.round(0.00001)*(mq-1)).wrap((pi/2).neg,(pi/2)))))*
(Complex(cos((sph5.phi.round(0.00001)).wrap((pi/2).neg,(pi/2))),
cos((sph5.phi.round(0.00001)).wrap((pi/2).neg,(pi/2))))))).rho/(2.sqrt)).pow(spread);
				};


		qy=	32.collect{		az6 = (az6+(360-(360/1.6180339887499))).wrap(180.neg,180);
			el6 = (el6+(180-(180/1.6180339887499))).wrap(90.neg,90);

				mag6=(mag6+(1-(1/1.6180339887499))).wrap(0,1);
	sph6=(Spherical(mag6,(az6.degrad+angle.degrad).wrap(pi.neg,pi),(el6.degrad+angle.degrad).wrap((pi/2).neg,(pi/2))));

 mag_qy=((((Complex(sin(((sph6.theta.round(0.00001))*mq).wrap(pi.neg,pi)),
sin(((sph6.theta.round(0.00001))*mq).wrap(pi.neg,pi))))*
(Complex(sin((sph6.phi.round(0.00001)*(mq-1)).wrap((pi/2).neg,(pi/2))),
sin((sph6.phi.round(0.00001)*(mq-1)).wrap((pi/2).neg,(pi/2)))))*
(Complex(cos((sph6.phi.round(0.00001)).wrap((pi/2).neg,(pi/2))),
cos((sph6.phi.round(0.00001)).wrap((pi/2).neg,(pi/2))))))).rho/(2.sqrt)).pow(spread);
				};


	magnitudez=	32.collect{		az7 = (az7+(360-(360/1.6180339887499))).wrap(180.neg,180);
			el7 = (el7+(180-(180/1.6180339887499))).wrap(90.neg,90);

				mag7=(mag7+(1-(1/1.6180339887499))).wrap(0,1);

sph7=(Spherical(mag7,(az7.degrad+angle.degrad).wrap(pi.neg,pi),(el7.degrad+angle.degrad).wrap((pi/2).neg,(pi/2))));

//if(
//m_z.even,
mag_z=(Complex(cos((sph7.phi.round(0.00001)*m_z).wrap((pi/2).neg,(pi/2))),cos((sph7.phi.round(0.00001)*m_z).wrap((pi/2).neg,(pi/2)))).rho/(2.sqrt)).pow(spread)
			//,
//mag_z=(Complex(sin((sph7.phi.round(0.00001)*m_z).wrap((pi/2).neg,(pi/2))),sin((sph7.phi.round(0.00001)*m_z).wrap((pi/2).neg,(pi/2)))).rho///(2.sqrt)).pow(spread)
//	);
////z axis   ambi..  sin for odd numbers, cos for even
				};

angle=(angle+(360-(360/1.6180339887499))).wrap(0,360);
~az=~az++azimuth;~el=~el++elevation;
~magx=~magx++magnitudex;~magy=~magy++magnitudey;~magz=~magz++magnitudez;
~qx=~qx++qx;~qy=~qy++qy;
		az1=0;el1=0;az2=0;el2=0;az3=0;el3=0;
		az4=0;el4=0;az5=0;el5=0;az6=0;el6=0;az7=0;el7=0;
	}
}.value;
);
	dota=(128*16).collect{

	az=~az.[pla];
	el=~el.[pla];
	//mag=1000;
	// mag=(Cartesian(~magx.[pl],~magy.[pl],~magz.[pl]).rho/(2.sqrt))+(Cartesian(~qx.[pl],~qy.[pl],~magz.[pl]).rho/(2.sqrt));
				 mag=(Cartesian(~magx.[pla],~magy.[pla],~magz.[pla]).rho/(2.sqrt));
		// mag=~magz.[pl];
	pla=pla+1;
			mk=(mk+(2.sqrt-(2.sqrt/1.6180339887499))).wrap(0,2.sqrt);
		sph=Spherical((mag*mk)*m_x,az,el).asCartesian.asArray;
};
	//pl=0;
	//mk=(mk+(1200-(1200/1.6180339887499))).wrap(0,1200);
	pla=0;
	data =data++dota;
	//data.postln;
 	a.data = data;  // Update ScatterView3d
	a.symbolColor = Color.grey(m_x.linlin(0,(size),0,1));
	a.background = Color.grey(m_x.linlin(0,(size),1,0));
	(1/6).wait
}});
r.play;


~v.animate;
~v.drawFunc ={
Pen.translate(400,400);

		a.rot(ot,ot,ot);
    ~v.refresh;

		ot=ot+1.degrad;

};
{ while { run } {~v.background_(Color.black); ~v.refresh; (0.0001).wait } }.fork(AppClock);
);




/////